stages:
  - build
  - deliver
  - deploy

build:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE_DOCKERHUB" .
  after_script:
    - docker save -o ${CI_PROJECT_NAME}.tar "$CI_REGISTRY_IMAGE_DOCKERHUB"
  artifacts:
    name: "docker-image-$CI_PROJECT_NAME"
    paths:
      - ${CI_PROJECT_NAME}.tar

deliver:
  image: docker:latest
  stage: deliver
  dependencies:
    - build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER_DOCKERHUB" -p "$CI_REGISTRY_PASSWORD_DOCKERHUB" $CI_REGISTRY_DOCKERHUB
    - docker load --input ${CI_PROJECT_NAME}.tar
  script:
    - docker push "$CI_REGISTRY_IMAGE_DOCKERHUB"

deploy:
  tags:
    - loghmeh-ui-runner
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: deploy
  dependencies:
    - deliver
  script:
    - export KUBECONFIG=./config.conf
    - kubectl delete deployment loghmeh-client --ignore-not-found=true
    - kubectl apply -f front-deployment.yml

#  kubectl expose deployment loghmeh-client --type NodePort --port 80
#  kubectl get deployment loghmeh-client -o yaml --export > front-service.yml